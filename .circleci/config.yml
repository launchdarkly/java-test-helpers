version: 2.1

orbs:
   win: circleci/windows@2.4.0

workflows:
  test:
    jobs:
      - build-linux
      - test-linux:
          name: Java 8 - Linux - OpenJDK
          docker-image: cimg/openjdk:8.0
          requires:
            - build-linux
      - test-linux:
          name: Java 11 - Linux - OpenJDK
          docker-image: cimg/openjdk:11.0
          requires:
            - build-linux
      - test-linux:
          name: Java 17 - Linux - OpenJDK
          docker-image: cimg/openjdk:17.0
          requires:
            - build-linux
      - build-test-windows:
          name: Java 11 - Windows - OpenJDK
          openjdk-version: 11.0.2.01
      - build-test-windows:
          name: Java 17 - Windows - OpenJDK
          openjdk-version: 17.0.1

jobs:
  build-linux:
    docker:
      - image: cimg/openjdk:8.0
    steps:
      - checkout
      - run: java -version
      - run: ./gradlew dependencies
      - run: ./gradlew jar
      - run: ./gradlew checkstyleMain
      - persist_to_workspace:
          root: build
          paths:
            - classes

  test-linux:
    parameters:
      docker-image:
        type: string
    docker:
      - image: <<parameters.docker-image>>
    steps:
      - checkout
      - attach_workspace:
          at: build
      - run: java -version
      - run: ./gradlew test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/;
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  build-test-windows:
    parameters:
      openjdk-version:
        type: string
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run:
          name: uninstall previous openjdk
          command: choco uninstall openjdk
      - run:
          name: install OpenJDK
          command: choco install openjdk --version <<parameters.openjdk-version>>
      - run: java -version
      - run:
          name: build and test
          command: |
            .\gradlew.bat --no-daemon test  # must use --no-daemon because CircleCI in Windows will hang if there's a daemon running
      - run:
          name: save test results
          command: |
            mkdir .\junit
            cp build/test-results/test/*.xml junit
      - store_test_results:
          path: .\junit
      - store_artifacts:
          path: .\junit
